<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <!--
    xunit test projects must target a platform, not an API.
    So we specify netcoreapp3.1 instead of the more general netstandard2.1.
    See https://xunit.net/docs/why-no-netstandard.
    -->
    <TargetFrameworks>netcoreapp3.1;net452</TargetFrameworks>
    <LangVersion>7.3</LangVersion>
    <IsPackable>false</IsPackable>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="dafny.msbuild" Version="1.0.0" />
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="16.2.0" />
    <PackageReference Include="xunit" Version="2.4.0" />
    <PackageReference Include="xunit.runner.visualstudio" Version="2.4.0" />
    <PackageReference Include="coverlet.collector" Version="1.0.1" />
    <PackageReference Include="System.Collections.Immutable" Version="1.7.0" />
    <PackageReference
            Include="Microsoft.NETFramework.ReferenceAssemblies"
            Version="1.0.0"
            Condition=" '$(TargetFrameworkIdentifier)' == '.NETFramework' ">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference
            Include="Microsoft.TestPlatform.ObjectModel"
            Version="17.1.0"
            Condition=" '$(TargetFrameworkIdentifier)' == '.NETFramework' " />
  </ItemGroup>

  <!--
    TODO: We should be able to just reference the source project, but that doesn't work
    well for Dafny yet: external C# code will be compiled and referrable, but the way we
    are currently writing external code requires that the external C# code is actually compiled
    together with the C# code generated from Dafny at the same time.
    For now we just inline the referenced project's source and dependencies.

  <ItemGroup>
    <ProjectReference Include="../src/AWSEncryptionSDK.csproj" />
  </ItemGroup>
  -->
  <ItemGroup>
    <DafnySource Include="../../src/**/*.dfy" />
    <DafnySource Include="../../test/**/*.dfy" />
    <!-- While a file is being edited in emacs, emacs spills out a .# copy of the file -->
    <DafnySource Remove="../../src/**/.#*.dfy" />
    <!-- While a file is being verified in emacs, the Dafny plug-in spills out a flycheck_ copy of the file -->
    <DafnySource Remove="../../test/**/flycheck_*.dfy" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="../Source/**/*.cs" Exclude="../Source/obj/**/*.cs" />
    <Content Include="../../test/hkdf/HKDFTest7OKM" LinkBase="hkdf">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="AWSSDK.Core" Version="3.7.9" />
    <PackageReference Include="AWSSDK.KeyManagementService" Version="3.7.2.83" />
    <PackageReference Include="Portable.BouncyCastle" Version="1.8.5.2" />
    <!-- Work around for dafny-lang/dafny/issues/1951; remove once resolved -->
    <PackageReference Include="System.ValueTuple" Version="4.5.0" />
  </ItemGroup>
  <ItemGroup>
    <VerifyDafnyPassthrough Include="timeLimit:300" />
    <VerifyDafnyPassthrough Include="definiteAssignment:3" />
  </ItemGroup>

  <!--
    Previous versions of this code base used lit for testing, which would drop
    C# files into "Output" subdirectories. Clean up the contents of those so that
    we don't try to compile those files as well.
  -->
  <ItemGroup>
    <LitOutputFiles Include="**/Output/*" />
  </ItemGroup>
  <Target Name="CleanLitOutput" BeforeTargets="CoreCompile">
    <Delete Files="@(LitOutputFiles)" />
  </Target>

</Project>
