version: 0.2

env:
  variables:
    UNSIGNED_S3_BUCKET: "349032751102-unsigned-bucket"
    SIGNED_S3_BUCKET: "349032751102-signed-bucket"
    S3_PREFIX: "aws_encryption_sdk_net/AuthenticodeSigner-SHA256-RSA"
    ROLE_ARN: "arn:aws:iam::349032751102:role/EncryptionSDKNetSigning-ArtifactAccessRole"
    FILE_NAME: "AWS.EncryptionSDK.dll"
   

phases:
  install:
    commands:
      # Get .NET SDK 6.0 (for build tools only; projects specify their own toolchains)
      #- Invoke-WebRequest https://dot.net/v1/dotnet-install.ps1 -UseBasicParsing -OutFile dotnet-install.ps1
      #- ./dotnet-install.ps1 -Channel 6.0
      # Try preventing intermittent cert issue.
      # See <https://github.com/NuGet/Home/issues/11099> and
      # <https://github.com/NuGet/NuGet.Client/pull/4259#issue-7318389620>
      #- set NUGET_EXPERIMENTAL_CHAIN_BUILD_RETRY_POLICY=3,1000
      # Required to install Nuget packages
      - Install-PackageProvider -Name NuGet -Force
      # Get AWS SDK
      - Install-Module -Name AWS.Tools.Installer -Force
      - Install-AWSToolsModule AWS.Tools.SecurityToken,AWS.Tools.S3 -Force
      - echo $PSVersionTable # TODO REMOVE
  build:
    commands:
      # Testing Get-AuthenticodeSignature
      - Get-AuthenticodeSignature -FilePath aws-encryption-sdk-net-formally-verified/codebuild/release/AWS.EncryptionSDK.dll -Verbose -Debug
      - $sig = Get-AuthenticodeSignature -FilePath aws-encryption-sdk-net-formally-verified/codebuild/release/AWS.EncryptionSDK.signed.dll -Verbose -Debug
      - Get-Member -InputObject $sig
      - echo $sig.SignerCertificate
      - echo $sig.SignatureType
      - echo $sig.Status
      - echo $sig.StatusMessage
      - echo $sig.Path
      # First assume the ArtifactAccess role to retrieve the signed DLL
      - $a = 6
      - echo $a
      - Use-STSRole -RoleArn $Env:ROLE_ARN -RoleSessionName "CodeBuildVerify"
      - $foo = Use-STSRole -RoleArn $Env:ROLE_ARN -RoleSessionName "CodeBuildVerify" -ExternalId "EncryptionSDKNetSigning" -Verbose
      - echo $foo
      #- $creds = Use-STSRole -RoleArn $Env:ROLE_ARN -RoleSessionName "CodeBuildVerify" -ExternalId "EncryptionSDKNetSigning"
      - Get-Member -InputObject $foo
      - Get-Member -InputObject $foo.Credentials
      #- echo $creds.Credentials
      #- echo $creds.Credentials.AccessKeyId
      #- echo $creds.Credentials.SecretAccessKey
      # Next get the signer job id, stored as a tag on the unsigned object
      - $tags = Get-S3ObjectTagSet -BucketName $Env:UNSIGNED_S3_BUCKET -Key $Env:S3_PREFIX/net452/$Env:UNIQUE_ID-$Env:FILE_NAME -Credential $foo.Credentials
      #- $tags = Get-S3ObjectTagSet -BucketName $Env:UNSIGNED_S3_BUCKET -Key $Env:S3_PREFIX/net452/$Env:UNIQUE_ID-$Env:FILE_NAME
      - $signer_job_id = $tags[0].Value
      # Now retrieve the signed dll
      - Read-S3Object -BucketName $Env:SIGNED_S3_BUCKET -KEY $Env:S3_PREFIX/net452/$Env:UNIQUE_ID-$ENV.FILE_NAME-$signer_job_id -Credential $foo.Credentials -File net452-$Env:FILE_NAME
