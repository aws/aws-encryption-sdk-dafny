# This workflow performs tests in .NET.
name: Library net tests

on: 
  pull_request:
  push:
    branches:
      - main

jobs:
  testDotNet:
    strategy:
      matrix:
        dotnet-version: [ '6.0.x' ]
        os: [ windows-latest, ubuntu-latest, macos-latest ]
        library: [ AwsCryptographyPrimitives, ComAmazonawsKms ]
    runs-on: ${{ matrix.os }}
    permissions:
      id-token: write
      contents: read
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_NOLOGO: 1
    steps:

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-west-2
          role-to-assume: arn:aws:iam::405437749609:role/Github-OICD-for-private-aws-encryption-sdk-da-Role-15BEGAP519YZV
          role-session-name: NetTests

      - uses: actions/checkout@v3
      # The specification submodule is private so we don't have access, but we don't need
      # it to verify the Dafny code. Instead we manually pull the submodule we DO need.
      - run: git submodule update --init libraries

      - name: Setup Dafny
        uses: dafny-lang/setup-dafny-action@v1.4.0
        with:
          dafny-version: "3.9.0"

      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Download Dependencies 
        working-directory: ./${{ matrix.library }}
        run: make setup_net

      - name: Compile ${{ matrix.library }} implementation
        shell: bash
        working-directory: ./${{ matrix.library }}
        run: |
          # This works because `node` is installed by default on GHA runners
          CORES=$(node -e 'console.log(os.cpus().length)')
          make compile_net CORES=$CORES

      - name: Test ${{ matrix.library }}
        working-directory: ./${{ matrix.library }}
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "macOS" ]; then
            export DYLD_LIBRARY_PATH="/usr/local/opt/openssl@1.1/lib"
          fi
          make test_net
