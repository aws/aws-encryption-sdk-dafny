# This workflow performs tests in .NET.
name: Library Java tests

on: 
  pull_request:
  push:
    branches:
      - main

jobs:
  testJava:
    strategy:
      matrix:
        library: [
          AwsCryptographyPrimitives,
          ComAmazonawsKms,
          #AwsCryptographicMaterialProviders
        ]
        java-version: [ 8, 11, 16, 17 ]
        os: [
          # TODO just test on mac for now
          #windows-latest,
          #ubuntu-latest,
          macos-latest
        ]
    runs-on: ${{ matrix.os }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-west-2
          role-to-assume: arn:aws:iam::405437749609:role/Github-OICD-for-private-aws-encryption-sdk-da-Role-15BEGAP519YZV
          role-session-name: NetTests

      - uses: actions/checkout@v3
      # The specification submodule is private so we don't have access, but we don't need
      # it to verify the Dafny code. Instead we manually pull the submodule we DO need.
      - run: git submodule update --init libraries

      - name: Setup Dafny
        uses: dafny-lang/setup-dafny-action@v1.4.0
        with:
          dafny-version: "nightly-2022-12-02-edab6cc"

      - name: Setup Java ${{ matrix.java-version }}
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: ${{ matrix.java-version }}

      # Java DafnyRuntime is not published to maven,
      # so manually download a nightly build for 3.10.0 and grab it from there.
      - name: Locally Cache Java DafnyRuntime
        run: |
          wget https://github.com/dafny-lang/dafny/releases/download/nightly/dafny-nightly-2022-12-02-edab6cc-x64-osx-10.14.2.zip 
          unzip dafny-nightly-2022-12-02-edab6cc-x64-osx-10.14.2.zip 
          mvn install:install-file \
          -Dfile=dafny/DafnyRuntime.jar \
          -DgroupId=dafny.lang \
          -DartifactId=DafnyRuntime \
          -Dversion=3.10.0 \
          -DgeneratePom=true \
          -Dpackaging=jar

      - name: Compile ${{ matrix.library }} implementation
        shell: bash
        working-directory: ./${{ matrix.library }}
        run: |
          # This works because `node` is installed by default on GHA runners
          CORES=$(node -e 'console.log(os.cpus().length)')
          make compile_java CORES=$CORES

      # Currently tests do not pass.
      # - name: Test ${{ matrix.library }}
      #  working-directory: ./${{ matrix.library }}
      #  shell: bash
      #  run: |
      #    make test_java
