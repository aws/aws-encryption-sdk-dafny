<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.0</TargetFramework>
    <IsPackable>false</IsPackable>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="16.2.0" />
    <PackageReference Include="xunit" Version="2.4.0" />
    <PackageReference Include="xunit.runner.visualstudio" Version="2.4.0" />
    <PackageReference Include="coverlet.collector" Version="1.0.1" />
  </ItemGroup>

  <!-- 
    TODO: We should be able to just reference the source project, but that doesn't work
    well for Dafny yet: external C# code will be compiled and referrable, but the way we
    are currently writing external code requires that the external C# code is actually compiled
    together with the C# code generated from Dafny. For now we just inline the referenced project's
    source and dependencies.

  <ItemGroup>
    <ProjectReference Include="../src/AWSEncryptionSDK.csproj" />
  </ItemGroup>
  -->
  <ItemGroup>
    <DafnySource Include="../src/**/*.dfy" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="../src/**/*.cs" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Portable.BouncyCastle" Version="1.8.5.2" />
  </ItemGroup>

  <ItemGroup>
    <DafnySource Include="**/*.dfy" />
  </ItemGroup>

  <!-- TODO: extract generic Dafny tasks that can be shared as part of Dafny itself -->

  <Target Name="GenerateFromDafnySource" 
          AfterTargets="ResolveReferences"
          BeforeTargets="CoreCompile"
          Inputs="$(MSBuildProjectFile);@(DafnySource)" 
          Outputs="../generated-src/Main.cs">
    <Exec Command="dafny /out:../generated-test/Main @(DafnySource, ' ') /compile:0 /spillTargetCode:3 /noVerify" />
    <ItemGroup>
      <Compile Include="../generated-test/Main.cs" />
    </ItemGroup>
  </Target>
</Project>
