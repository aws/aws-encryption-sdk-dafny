// RUN: %dafny /out:./Output/TestHKDF3.exe "./TestHKDF3.dfy" "../../src/Crypto/HKDF/HKDF-extern.cs" "../../src/Util/Arrays-extern.cs" "../../lib/BouncyCastle.1.8.5/lib/BouncyCastle.Crypto.dll" /noVerify /compile:2
// RUN: cp "../../lib/BouncyCastle.1.8.5/lib/BouncyCastle.Crypto.dll" "./Output/"
// RUN: %mono ./Output/TestHKDF3.exe > "%t" && rm ./Output/TestHKDF3.exe
// RUN: %diff "%s.expect" "%t"

include "../../src/StandardLibrary/StandardLibrary.dfy"
include "../../src/Crypto/HKDF/HKDF.dfy"
include "../../src/Crypto/HKDF/HKDFSpec.dfy"

module TestHKDF3 {
  
  import opened StandardLibrary
  import opened HKDF
  import opened Digests

  method Main() {
    // Test vector 3: Basic test case with SHA-384
    var tv_salt := new [][ 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c ];

    var tv_ikm  := new [][ 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b,
                           0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b ];

    var tv_info := new[][ 0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9 ];

    var tv_okm_desired := new[][ 0x9b, 0x50, 0x97, 0xa8, 0x60, 0x38, 0xb8, 0x05, 0x30, 0x90, 0x76,
                                 0xa4, 0x4b, 0x3a, 0x9f, 0x38, 0x06, 0x3e, 0x25, 0xb5, 0x16, 0xdc,
                                 0xbf, 0x36, 0x9f, 0x39, 0x4c, 0xfa, 0xb4, 0x36, 0x85, 0xf7, 0x48,
                                 0xb6, 0x45, 0x77, 0x63, 0xe4, 0xf0, 0x20, 0x4f, 0xc5 ];

    var okm := hkdf(HmacSHA384, tv_salt, tv_ikm, tv_info, 42);
    if okm[..] == tv_okm_desired[..] {
      print "EQUAL\n";
    } else {
      print "NOT EQUAL\n";
    }
  }
}